#include <vector>
using namespace std;

class Solution {
public:
    int uniquePaths(int m, int n) {
        // 创建一个 m x n 的 dp 数组，初始化为 0
        vector<vector<int>> dp(m, vector<int>(n, 0));

        // 初始化第一行和第一列
        for (int i = 0; i < m; ++i) {
            dp[i][0] = 1; // 第一列
        }
        for (int j = 0; j < n; ++j) {
            dp[0][j] = 1; // 第一行
        }
        
        // 填充 dp 数组
        for (int i = 1; i < m; ++i) {
            for (int j = 1; j < n; ++j) {
                dp[i][j] = dp[i - 1][j] + dp[i][j - 1]; // 状态转移方程
            }
        }

        // 返回右下角的路径数量
        return dp[m - 1][n - 1];
    }
};
